$size__site_content_width: 1024px;

$media_queries: (
	'mobile': 'only screen and (max-width: 667px)',
	'tablet': 'only screen and (min-width: 668px) and (max-width: 1024px)',
	'desktop': 'only screen and (min-width: 1025px)',
	'landscape': 'screen and (orientation:landscape) ',
	'portrait': 'screen and (orientation:portrait) ',
);

@mixin for_breakpoint($breakpoints) {
	$conditions: ();
	@each $breakpoint in $breakpoints {
		// If the key exists in the map
		$conditions: append(
			$conditions,
			#{inspect(map-get($media_queries, $breakpoint))},
			comma
		);
	}

	@media #{$conditions} {
		@content;
	}
}

$primary-colour: #131618;
$secondary-colour: #ffcd26;
$primary-font: 'Urbanist', sans-serif;
$heading-font: 'Fugaz One', cursive;

$items: 4;
$transition-duration: 0.5s;
$transition-delay: 0.05s;

html {
	min-width: 100%;
	min-height: 100%;
	width: 100%;
	height: 100%;
	box-sizing: border-box;
	overflow-x: hidden !important;
}
body {
	min-width: 100%;
	min-height: 100%;
	width: 100%;
	height: 100%;
	box-sizing: border-box;
	height: 100vh;
	margin: 0;
	overflow-x: hidden !important;
}
* {
	box-sizing: inherit;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	&:before {
		box-sizing: inherit;
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
	}
	&:after {
		box-sizing: inherit;
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
	}
}
h1 {
	font-family: $heading-font;
	font-weight: 600;
	font-size: 8rem;
	color: black;
	margin: 0;
	line-height: 8rem;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
	@include for_breakpoint(mobile) {
		font-size: 3em;
	}
}
h2 {
	font-family: $heading-font;
	font-weight: 600;
	font-size: 3rem;
	color: black;
	margin: 0;
	line-height: 3rem;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
	@include for_breakpoint(mobile) {
		font-size: 2em;
	}
}
h3 {
	margin: 0;
	font-family: $primary-font;
	font-weight: 600;
	font-size: 1.6rem;
	color: black;
	margin: 0;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
}
p {
	font-family: $primary-font;
	font-weight: 400;
	font-size: 1.2rem;
	color: black;
}
.hide-on-mobile {
	@include for_breakpoint(mobile) {
		display: none !important;
	}
}
.hide-on-desktop {
	@include for_breakpoint(desktop) {
		display: none !important;
	}
}
.primary-font-override {
	font-family: $primary-font;
}
.white-text {
	color: white;
}
.dark-background {
	background-color: $primary-colour;
}
.full-width {
	width: 100% !important;
}
.max-width {
	width: 1260px;
	@include for_breakpoint(mobile) {
		width: 100% !important;
	}
}
.align-center {
	text-align: center;
}
.align-left {
	text-align: left;
}
.align-right {
	text-align: right;
}
.line {
	width: 75%;
	border: solid white 2px;
}
.navbar {
	width: 100%;
	height: 110px;
	position: fixed;
	background-color: $primary-colour;
	left: 0;
	top: 0;
	transition: ease 0.4s;
	z-index: 999;
	&--scrolled {
		height: 80px;
		transition: ease 0.4s;
	}
}
.navbar-wrapper {
	width: 100%;
	height: 100%;
	padding: 0 40px;
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;
}
.navbar-logo {
	height: 100%;
	display: flex;
	flex-direction: row;
	justify-content: center;
	align-items: center;
}
.nav-items-wrapper {
	width: 100%;
	display: flex;
	flex-direction: row;
	justify-content: end;
	width: 100%;
	height: 30px;
	display: flex;
}
.nav-item {
	height: 100%;
	display: flex;
	margin: 0 1.2em;
	align-items: center;
	transition: all 0.2s ease-in-out;
	&:hover {
		cursor: pointer;
		transition: all 0.2s ease-in-out;
		transform: scale(1.2);
		background-color: $primary-colour !important;
	}
	> a {
		font-family: $heading-font;
		color: white;
		text-decoration: none;
		padding: 0 20px;
		font-size: 1.1em;
	}
}
.navsmall-wrapper {
	height: 100%;
	display: flex;
	justify-content: center;
	align-items: center;
}
.splash {
	position: relative;
	height: 100vh;
	margin-top: 80px;
	@include for_breakpoint(mobile) {
		margin-top: 0 !important;
	}
}
.splash-image {
	position: absolute;
	height: 100%;
	width: 100%;
	z-index: 1;
	> img {
		height: 100%;
		width: 100%;
		-o-object-fit: cover;
		object-fit: cover;
	}
}
.splash-image-overlay {
	position: absolute;
	height: 100%;
	width: 100%;
	background-color: black;
	opacity: 0.35;
	z-index: 2;
}
.splash-text {
	height: 100%;
	width: 100%;
	position: absolute;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	padding: 20px 40px;
	z-index: 3;
	> p {
		text-align: center !important;
		overflow-wrap: normal;
	}
	@include for_breakpoint(mobile) {
		padding: 0 !important;
		> h1 {
			width: 100% !important;
			text-align: center;
		}
		> h2 {
			width: 100% !important;
			text-align: center;
		}
		> h3 {
			padding: 0 10px !important;
		}
	}
}
.mini-splash {
	position: relative;
	height: 400px;
	@include for_breakpoint(desktop) {
		margin-top: 80px;
	}
	> .splash-image {
		position: absolute;
		height: 400px;
		width: 100%;
		z-index: 1;
	}
}
.number-prompt {
	display: flex;
	border: solid white 4px;
	padding: 1.5em;
	margin: 1.5em;
	border-radius: 40px;
	> i {
		font-size: 3rem;
		margin-right: 20px;
	}
	> h2 {
		text-decoration: none !important;
		color: white !important;
	}
	@include for_breakpoint(mobile) {
		border: 0 !important;
		> i {
			font-size: 1.8rem;
		}
		> h2 {
			font-size: 2rem;
		}
	}
}
.background-wrapper {
	display: flex;
	justify-content: center;
	align-items: center;
	flex-direction: column;
}
.content-wrapper {
	max-width: 100%;
	width: 1260px;
	display: flex;
	justify-content: center;
	padding: 3em;
	@include for_breakpoint(mobile) {
		padding: 30px 0 !important;
	}
}
.content-section {
	padding: 0 40px;
}
.inner-width {
	width: 1180px;
	padding: 0 40px;
}
.content-text {
	&.side-by-side {
		margin: 3em 0 !important;
	}
	> p {
		margin: 2em;
	}
	> .content-side-by-side h2 {
		margin: 1em 0 !important;
	}
	@include for_breakpoint(mobile) {
		> p {
			margin: 1em 0 !important;
		}
	}
}
.content-image {
	width: 100%;
	display: flex;
	justify-content: center;
	> img {
		width: 50%;
		max-width: 500px;
	}
}
.icons {
	width: 100%;
	display: flex;
	justify-content: space-between;
	margin: 1em 0;
	@include for_breakpoint(mobile) {
		margin-top: 40px !important;
		flex-direction: column !important;
	}
}
.icon {
	display: flex;
	flex-direction: column;
	justify-content: center;
	width: 300px;
	@include for_breakpoint(mobile) {
		width: 100% !important;
	}
}
.icon-wrapper {
	height: 200px;
	display: flex;
	justify-content: center;
	> i {
		font-size: 8rem;
		margin: auto;
	}
	@include for_breakpoint(mobile) {
		height: -webkit-fit-content !important;
		height: -moz-fit-content !important;
		height: fit-content !important;
		> i {
			font-size: 4em !important;
		}
	}
}
.gallery-3 {
	width: 100%;
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	gap: 2em;
	margin-top: 4em;
	@include for_breakpoint(mobile) {
		margin-top: 1em !important;
	}
}
.gallery-3-block {
	display: flex;
	flex-direction: column;
	align-items: center;
	flex: 1;
	> p {
		min-height: 120px;
	}
}
.img-hover-wrapper {
	min-width: 300px;
	width: 100%;
	height: 250px;
	overflow: hidden;
	border-radius: 8px;
	&:hover {
		> img {
			transition: transform 0.5s ease-in-out;
			transform: scale(1.1);
		}
	}
	> img {
		width: 100%;
		-o-object-fit: cover;
		object-fit: cover;
		transition: transform 0.5s ease-in-out;
		transform: scale(1);
	}
}
.contact-block {
	position: relative;
	display: flex;
	border: solid white 4px;
	padding: 1.5em;
	margin: 1.5em;
	border-radius: 40px;
	> i {
		font-size: 2rem;
		margin-right: 20px;
	}
	> h2 {
		font-family: $primary-font !important;
	}
	> a {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
	}
	@include for_breakpoint(mobile) {
		margin: 1.5em 0 !important;
		> h3 {
			font-size: 1.5rem;
			word-wrap: break-word;
		}
	}
}

.navbar-mobile-wrapper {
	width: 100%;
	z-index: 999;
	position: fixed;
	background-color: $primary-colour;
}
/* Toggle Functionality */
#toggle {
	display: none; //hides the checkbox
}
// Styles for the 'open' state, if the checkbox is checked
#toggle:checked {
	//Any element you need to change the style if menu is open goes here, using the sibling selector (~)
	& ~ .toggle-container .button-toggle {
		&:before {
			transform: translateY(-50%) rotate(45deg) scale(1);
		}

		&:after {
			transform: translateY(-50%) rotate(-45deg) scale(1);
		}
	}

	// Open Nav
	& ~ .nav {
		margin-bottom: 100px;
		pointer-events: auto;
		transform: translate(50px, 50px);

		// Restoring nav items from 'lines' in the menu icon
		.nav-item {
			height: 40px;
			font-family: $primary-font;
			font-size: 1.2rem;
			line-height: 40px;
			text-decoration: none;
			letter-spacing: 0;
			color: white;
			margin-top: 0;
			opacity: 1;
			transform: scaleY(1);
			transition: $transition-duration, opacity 0.1s;

			// Setting delays for the nav items in open transition
			@for $i from 1 through $items {
				&:nth-child(#{$i}) {
					$delay: ($items - $i) * $transition-delay;
					transition-delay: $delay;
					&:before {
						transition-delay: $delay;
					}
				}
			}

			// Hide the lines
			&:before {
				opacity: 0;
			}
		}
	}
}

/* Toggle Button */

.button-toggle {
	position: absolute;
	display: inline-block;
	width: 20px;
	height: 20px;
	margin: 25px;
	background-color: transparent;
	border: none;
	cursor: pointer;
	border-radius: 100%;
	transition: $transition-duration + 0.1;

	// Making the 'X' icon using `:before` and `:after` pseudo-elements
	// Initially hidden beause of `scale(0)` transformation

	&:before,
	&:after {
		position: absolute;
		content: '';
		top: 50%;
		left: 0;
		width: 100%;
		height: 2px;
		background-color: white;
		border-radius: 5px;
		transition: $transition-duration;
	}

	&:before {
		transform: translateY(-50%) rotate(45deg) scale(0);
	}

	&:after {
		transform: translateY(50%) rotate(-45deg) scale(0);
	}
}

/* Menu */

.nav {
	display: inline-block;
	margin: 25px 25px 20px;
	pointer-events: none;
	transition: $transition-duration;
}

// Showing nav items as lines, making up the hamburger menu icon
.nav-mobile-item {
	position: relative;
	display: inline-block;
	float: left;
	clear: both;
	color: transparent;
	font-size: 14px;
	letter-spacing: -6.2px;
	height: 7px;
	line-height: 7px;
	text-transform: uppercase;
	white-space: nowrap;
	text-decoration: none;
	transform: scaleY(0.2);
	transition: $transition-duration, opacity 1s;

	//Set delays for the nav items in close transition
	@for $i from 1 through $items {
		&:nth-child(#{$i}) {
			$delay: ($i - 1) * $transition-delay;
			transition-delay: $delay;
			&:before {
				transition-delay: $delay;
			}
		}
	}

	// Adjusting width for first line
	&:nth-child(1) {
		letter-spacing: -8px;
	}

	// Adjusting width for second line
	&:nth-child(2) {
		letter-spacing: -7px;
	}

	// Adjusting the fourth element onwards
	&:nth-child(n + 4) {
		letter-spacing: -8px;
		margin-top: -7px;
		opacity: 0;
	}

	//getting lines for the hamburger menu icon
	&:before {
		position: absolute;
		content: '';
		top: 50%;
		left: 0;
		width: 100%;
		height: 2px;
		background-color: white;
		transform: translateY(-50%) scaleY(5);
		transition: $transition-duration;
	}
}
